;Shubham Agarwal
;JD4
;sagarwl4
;ifnds the minimum of 10 numbers with the application of a while loop.
;R1 - stores the value read from the memory 
;R2 - its the -ve of R1 for computation purpose 
;R3 - stores the address of the memory or the address the numbers
;R4 - a counter for the numbers left to check
;R5 - stores value of R2+R6 for comptation purpose.

; This is the file you will use for Discussion 12 assignment
; Make sure to comment your code properly and don't exceed 
; the line limitation for this assignment.  Good luck!

0011 0001 0000 0000 ; x3100 - starting address of the program

; The program description and code starts here
					; 1st instruction set
0101 001 001 1 00000; clear R1 so now R1<=0
0101 010 010 1 00000; clear R2 so now R2<=0
0101 011 011 1 00000; clear R3 so now R3<=0
0101 100 100 1 00000; clear R4 so now R4<=0
0101 101 101 1 00000; clear R5 so now R5<=0
0001 100 100 1 01001; add 10 to R4 so R4 now has 10 R4<-0 + 10
0101 110 110 1 00000; clear R6R6<-0
0010 110 000001100; use the LD insrt for R6
1110 011 000101001; offset for R3

					; 2nd instruction set
0000 010 000001001; Checks if R4>0
0110 001 011 000000; R1 <- M [R3]
1001 010 001 111111; not R1 stored in R2 R2<-~R1
0001 010 010 1 00001;add 1 to R2 for 2’s complement R2 <- R2+1

					;3rd instruction set
0001 101 110 0 00 010; R6 + R2 and save to R5	R5<-R6 + R2
0000 100 000000001; branch, if –ve skip next line 
0001 110 001 1 00000; ADD 0 to R1 and store in R6  R6<-0+R1
0001 011 011 1 00001; ADD 1 to R3 and store in R3 R3<-1+R3
0001 100 100 1 11111; ADD -1 to R4 and store in R4 R4<-R4-1


					;4th instruction set (if false)
0000 111 111110110; branch, if +ve loops back to start 

					;5th instruction
1111 0000 00000000; trap 
0111 1111 11111111; this is the value 326767 in binary 
